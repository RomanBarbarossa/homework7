#Винни-Пух попросил Вас посмотреть, есть ли в его стихах ритм. Поскольку
 # разобраться в его кричалках не настолько просто, насколько легко он их
 # придумывает, Вам стоит написать программу. Винни-Пух считает, что ритм есть,
 # если число слогов (т.е. число гласных букв) в каждой фразе стихотворения
 # одинаковое. Фраза может состоять из одного слова, если во фразе несколько
 # слов, то они разделяются дефисами. Фразы отделяются друг от друга пробелами.
 # Стихотворение  Винни-Пух вбивает в программу с клавиатуры. В ответе напишите
 # “Парам пам-пам”, если с ритмом все в порядке и “Пам парам”, если с ритмом
 # все не в порядке

glasnye = ["а", "о", "у", "ы", "э", "е", "ё", "и", "ю", "я"]


def same_by(charsacteristic, objects):
    objects = set(map(charsacteristic, objects))
    return len(objects) == 1


def how_many_slogov(fraze):
    glasnye_of_fraze = [i for i in fraze if i in glasnye]
    return len(glasnye_of_fraze)


stih = 'пара-ра-рам рам-папам па-ра-па-да'
if same_by(how_many_slogov, stih.split()):
    print("Парам пам-пам")
else:
    print("Пам парам")



    # Задача 36: На вход программы поступает строка в формате:
 # ключ_1=значение_1 ключ_2=значение_2 ... ключ_N=значение_N
 # Необходимо с помощью функции map преобразовать ее в кортеж tp вида:
 # tp = (('ключ_1', 'значение_1'), ('ключ_2', 'значение_2'), ..., ('ключ_N',
 # 'значение_N'))
 # Выводить на экран получившийся кортеж.
 # Sample Input:
 # house=дом car=машина men=человек tree=дерево
 # Sample Output:
 # ((house, дом), (car, машина), (men, человек), (tree, дерево))


def make_tuple(out_str):
    return tuple(out_str.split('='))


output_str = "house=дом car=машина men=человек tree=дерево"
output_str = tuple(map(make_tuple, output_str.split()))
print(output_str)